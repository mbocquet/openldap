---
# tasks file for openldap
- name: "check if slapd exists"
  ansible.builtin.stat:
    path: '/etc/default/slapd'
  register: slapd_exists
  changed_when: false
  tags:
    - openldap
    - check

- name: "configure admin password"
  ansible.builtin.debconf:
    name: 'slapd'
    question: 'slapd/password1'
    vtype: 'password'
    value: '{{ openldap_password }}'
  when: not slapd_exists.stat.exists
  tags:
    - openldap
    - debconf
    - password

- name: "confirm admin password"
  ansible.builtin.debconf:
    name: 'slapd'
    question: 'slapd/password2'
    vtype: 'password'
    value: '{{ openldap_password }}'
  when: not slapd_exists.stat.exists
  tags:
    - openldap
    - debconf
    - password

- name: "set organization name"
  ansible.builtin.debconf:
    name: 'slapd'
    question: 'shared/organization'
    vtype: 'string'
    value: '{{ openldap_organization }}'
  when:
    - not slapd_exists.stat.exists
    - openldap_organization is defined
  tags:
    - openldap
    - debconf
    - organization

- name: "set domain name"
  ansible.builtin.debconf:
    name: 'slapd'
    question: 'slapd/domain'
    vtype: 'string'
    value: '{{ openldap_domain }}'
  when:
    - not slapd_exists.stat.exists
    - openldap_organization is defined
  tags:
    - openldap
    - debconf
    - organization

- name: "packages"
  ansible.builtin.package:
    name: '{{ openldap_packages }}'
  tags:
    - openldap
    - packages

- name: Service_facts
  ansible.builtin.service_facts:
  tags:
    - openldap
    - facts

- name: "default configuration"
  ansible.builtin.template:
    src: 'etc_default_slapd.j2'
    dest: '/etc/default/slapd'
    mode: 0644
  when: "'slapd.service' in services"
  notify:
    - slapd restart
  tags:
    - openldap
    - defaults

# try to configure clients without certificates checking
# - name: "create default organization units"
